1.概述：
1.1 整个项目采用 golang 为主要开发语言，redis 消息队列。
1.2 开发工具为: vscode。
1.3 项目搭建: 安装 golang 运行环境，安装 redis。
1.4 依赖库： 
    redigo: 
    github.com/gomodule/redigo/redis
    --------------------------------------------
    token: 
    github.com/dgrijalva/jwt-go
    --------------------------------------------
    websocket库：
    github.com/gorilla/websocket
    
1.5 源码编译目录：$gopath/reverse_proxy 
1.6 运行：打开目录 $gopath/reverse_proxy， 执行命令 go build; ./reverse_proxy -h获取启动运行帮助信息


2.项目目录结构描述:
.└── reverse_proxy    
    │-------------------------------------------- 
    ├── common //整个项目一些共用代码
    │   └── common.go   //一些共用函数，常量，结构体定义
    │   └── conf.go   //项目配置文件初始化
	│   └── log.go   //日志打印实现
	│   └── conf   //配置文件底层实现目录
	│   	└── conf.go   //配置文件对外接口操作文件
	│   	└── read.go   //配置文件读操作文件
	│   	└── write.go   //配置文件写操作文件
    │--------------------------------------------     
    ├── conf  //+配置文件夹
    │   ├── conf         //配置文件
    │--------------------------------------------     
    │--------------------------------------------     
    ├── logic //逻辑实现文件夹
    │   ├── common.go  				//logic模块一些公共变量定义，函数等定义
    │   ├── queue.go   				//队列消息逻辑处理文件
    │   ├── websocket_proxy.go    	//websocket代理实现
    │   ├── myredis.go  			//redis数据库接口文件
    │   ├── http_proxy.go  			//http代理实现
	│   ├── consistent				//一致性hash实现
    │--------------------------------------------     
    ├── main.go //主程序入口